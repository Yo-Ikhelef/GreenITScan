name: GreenItScan CI Pipeline
on:
  push:
    branches:
      - cicd
  pull_request:
    branches:
      - cicd
jobs:
  cypress-e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean up Docker containers
        run: |
          echo "=== Cleaning up Docker containers ==="
          docker-compose -f docker-compose.yml down -v --remove-orphans || true
          docker system prune -f --volumes || true
        continue-on-error: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.19.1'
          cache: 'npm'
          cache-dependency-path: quasar-project/package-lock.json
        continue-on-error: true

      - name: Install Make and Docker Compose
        run: |
          echo "=== Installing Make and Docker Compose ==="
          sudo apt-get update
          sudo apt-get install -y make
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
        continue-on-error: true

      # - name: Fix NPM vulnerabilities
      #   run: |
      #     npm audit fix
      #     npm install
      #   working-directory: ./quasar-project
      #   continue-on-error: true

      - name: Build Docker images
        run: |
          echo "=== Building Docker images ==="
          make build
        continue-on-error: true

      - name: Debug Docker services before start
        run: |
          echo "=== Docker containers before start ==="
          docker ps -a || true
          echo "=== Docker Compose config ==="
          docker-compose -f docker-compose.yml config || true
          echo "=== Docker Compose logs ==="
          docker-compose -f docker-compose.yml logs || true
        continue-on-error: true

      - name: Start Docker services and initialize
        run: |
          echo "=== Starting Docker services ==="
          make install
        continue-on-error: true

      # - name: Install node_modules in frontend container
      #   run: |
      #     docker ps -a | grep quasar-frontend || { echo "Container quasar-frontend not found"; exit 1; }
      #     docker exec quasar-frontend npm ci
      #   continue-on-error: true

      - name: Debug Docker services after start
        run: |
          echo "=== Docker containers after start ==="
          docker ps -a || true
          echo "=== Docker Compose logs (frontend) ==="
          docker-compose -f docker-compose.yml logs frontend || true
          echo "=== Docker Compose logs (backend) ==="
          docker-compose -f docker-compose.yml logs backend || true
          echo "=== Listing node_modules in quasar-frontend ==="
          docker exec quasar-frontend ls -la /app/node_modules | head -n 20 || true
        continue-on-error: true

      - name: Test TCP ports
        run: |
          echo "=== Testing TCP ports ==="
          echo "Testing port 9000 (frontend)..."
          nc -zv localhost 9000 || echo "Port 9000 not reachable"
          echo "Testing port 8000 (backend)..."
          nc -zv localhost 8000 || echo "Port 8000 not reachable"
          echo "Testing port 3307 (database)..."
          nc -zv localhost 3307 || echo "Port 3307 not reachable"
        continue-on-error: true

      - name: Test HTTP endpoints
        run: |
          echo "=== Testing HTTP endpoints ==="
          echo "Testing frontend endpoint..."
          curl -v http://localhost:9000 || echo "Failed to reach frontend"
          echo "Testing backend API endpoint..."
          curl -v http://localhost:8000/api/doc || echo "Failed to reach backend API"
        continue-on-error: true

      - name: Wait for services to be healthy
        run: |
          echo "=== Waiting for services to be healthy ==="
          npx wait-on http://localhost:9000 --timeout 300000 || echo "Timeout waiting for frontend"
          npx wait-on http://localhost:8000/api/doc --timeout 120000 || echo "Timeout waiting for backend API"
          npx wait-on tcp:localhost:3307 --timeout 60000 || echo "Timeout waiting for database"
        continue-on-error: true

      - name: Install PHPUnit in backend container
        run: |
          echo "=== Installing PHPUnit in backend container ==="
          docker exec api_backend composer require --dev phpunit/phpunit || true
        continue-on-error: true

      - name: Run PHPUnit tests in backend container
        run: |
          echo "=== Running PHPUnit tests ==="
          docker exec -e APP_ENV=test api_backend vendor/bin/phpunit --testdox --stop-on-failure || true
        continue-on-error: true

      - name: Install quasar-project dependencies
        run: |
          echo "=== Installing quasar-project dependencies ==="
          npm ci || true
        working-directory: ./quasar-project
        continue-on-error: true

      - name: Update @quasar/app-webpack
        run: |
          echo "=== Updating @quasar/app-webpack ==="
          npm install @quasar/app-webpack@latest || true
        working-directory: ./quasar-project
        continue-on-error: true

      - name: Debug Quasar container logs
        run: docker logs quasar-frontend
        continue-on-error: true

      - name: Verify port 9000 is accessible
        run: |
          echo "=== Testing port 9000 accessibility ==="
          nc -zv localhost 9000 || { echo "Port 9000 is not accessible from host!"; exit 1; }
        continue-on-error: true

      - name: Verify Quasar container is running
        run: |
          echo "=== Checking Quasar container status ==="
          docker ps | grep quasar-frontend || { echo "Quasar container is not running!"; exit 1; }
        continue-on-error: true

      - name: Run Cypress E2E tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          spec: |
            quasar-project/cypress/e2e/first.cy.js
            quasar-project/cypress/e2e/login_spec.cy.js
            quasar-project/cypress/e2e/questionnaire_page_spec.cy.js
            quasar-project/cypress/e2e/register_user_spec.cy.js
            quasar-project/cypress/e2e/resultats_page_spec.cy.js
          working-directory: ./quasar-project
          record: false
        env:
          CYPRESS_FRONTEND_URL: http://localhost:9000
          CYPRESS_API_URL: http://localhost:8000
        continue-on-error: true

      - name: Upload Cypress E2E artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-e2e-artifacts
          path: |
            quasar-project/cypress/screenshots
            quasar-project/cypress/videos
          retention-days: 7
        continue-on-error: true

      - name: Debug Docker logs on failure
        if: failure()
        run: |
          echo "=== Debugging Docker logs on failure ==="
          docker-compose -f docker-compose.yml logs > docker_logs.txt || true
          cat docker_logs.txt || true
          mkdir -p logs || true
          cp docker_logs.txt logs/ || true
        continue-on-error: true

      - name: Upload Docker logs and diagnostics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-diagnostics
          path: logs/
          retention-days: 7
        continue-on-error: true

      - name: Stop Docker services
        if: always()
        run: |
          echo "=== Stopping Docker services ==="
          make down || true
        continue-on-error: true

# cypress-component:
#   runs-on: ubuntu-latest
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v4
#     - name: Setup Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '18.19.1'
#         cache: 'npm'
#         cache-dependency-path: quasar-project/package-lock.json
#     - name: Install quasar-project dependencies
#       run: npm ci
#       working-directory: ./quasar-project
#     - name: Run Cypress component tests
#       uses: cypress-io/github-action@v6
#       with:
#         browser: chrome
#         component: true
#         spec: quasar-project/cypress/e2e/card_result_spec.cy.js
#         working-directory: ./quasar-project
#     - name: Upload Cypress component artifacts
#       if: always()
#       uses: actions/upload-artifact@v4
#       with:
#         name: cypress-component-artifacts
#         path: quasar-project/cypress/downloads
#         retention-days: 77
