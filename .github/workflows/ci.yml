name: GreenItScan CI Pipeline
on:
  push:
    branches:
      - cicd
  pull_request:
    branches:
      - cicd
jobs:
  cypress-e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Clean up Docker containers
        run: |
          docker-compose -f docker-compose.yml down -v --remove-orphans || true
          docker system prune -f --volumes || true
        continue-on-error: true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.19.1'
          cache: 'npm'
          cache-dependency-path: quasar-project/package-lock.json
      - name: Install Make and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y make
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
      - name: Build Docker images
        run: |
          make build
      - name: Debug Docker services before start
        run: |
          docker ps -a
          docker-compose -f docker-compose.yml config
          docker-compose -f docker-compose.yml logs
      - name: Start Docker services and initialize
        run: |
          make install
      - name: Debug Docker services after start
        run: |
          docker ps -a
          docker-compose -f docker-compose.yml logs frontend
          docker-compose -f docker-compose.yml logs backend
          docker exec quasar-frontend ls -la /app/node_modules | head -n 20
      - name: Wait for services to be healthy
        run: |
          npm install wait-on
          npx wait-on http://quasar-frontend:9000 --timeout 300000
          npx wait-on http://api_backend:8000/api/doc --timeout 120000
          npx wait-on tcp:db:3306 --timeout 60000
        working-directory: ./quasar-project
      - name: Install PHPUnit in backend container
        run: |
          docker exec api_backend composer require --dev phpunit/phpunit
      - name: Initialize test database
        run: |
          docker exec api_backend php artisan migrate --env=test
          docker exec api_backend php artisan db:seed --env=test
        continue-on-error: true
      - name: Test API endpoint manually
        run: |
          docker exec api_backend curl -v -X POST http://api_backend:8000/api/users/login -H "Content-Type: application/json" -d '{"email":"user@example.com","password":"azerty"}'
        continue-on-error: true
      - name: Run PHPUnit tests in backend container
        run: |
          docker exec -e APP_ENV=test api_backend vendor/bin/phpunit --testdox --stop-on-failure --log-junit /tmp/phpunit-report.xml
        continue-on-error: true
      - name: Upload PHPUnit test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: phpunit-report
          path: /tmp/phpunit-report.xml
          retention-days: 7
      - name: Upload PHPUnit text output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: phpunit-text-output
          path: /tmp/phpunit-output.txt
          retention-days: 7
      - name: Install quasar-project dependencies
        run: npm ci
        working-directory: ./quasar-project
      - name: Update @quasar/app-webpack
        run: npm install @quasar/app-webpack@latest
        working-directory: ./quasar-project
      - name: Start Quasar dev server
        run: |
          docker exec quasar-frontend npm run dev > /app/quasar-dev.log 2>&1 &
          sleep 10
          docker exec quasar-frontend cat /app/quasar-dev.log
        continue-on-error: true
      - name: Debug Quasar server
        run: |
          docker exec quasar-frontend curl -v http://quasar-frontend:9000 || echo "Failed to reach Quasar server"
          docker-compose -f docker-compose.yml logs quasar-frontend
        continue-on-error: true
      - name: Wait for Quasar to be ready
        run: |
          npx wait-on http://quasar-frontend:9000 --timeout 300000
        working-directory: ./quasar-project
      - name: Run Cypress E2E tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          spec: |
            quasar-project/cypress/e2e/first.cy.js
            quasar-project/cypress/e2e/login_spec.cy.js
            quasar-project/cypress/e2e/questionnaire_page_spec.cy.js
            quasar-project/cypress/e2e/register_user_spec.cy.js
            quasar-project/cypress/e2e/resultats_page_spec.cy.js
          working-directory: ./quasar-project
          record: false
        env:
          CYPRESS_FRONTEND_URL: http://quasar-frontend:9000
          CYPRESS_API_URL: http://api_backend:8000
      - name: Upload Cypress E2E artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-e2e-artifacts
          path: |
            quasar-project/cypress/screenshots
            quasar-project/cypress/videos
          retention-days: 7
      - name: Debug Docker logs on failure
        if: failure()
        run: docker-compose -f docker-compose.yml logs
      - name: Stop Docker services
        if: always()
        run: make down

# cypress-component:
#   runs-on: ubuntu-latest
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v4
#     - name: Setup Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '18.19.1'
#         cache: 'npm'
#         cache-dependency-path: quasar-project/package-lock.json
#     - name: Install quasar-project dependencies
#       run: npm ci
#       working-directory: ./quasar-project
#     - name: Run Cypress component tests
#       uses: cypress-io/github-action@v6
#       with:
#         browser: chrome
#         component: true
#         spec: quasar-project/cypress/e2e/card_result_spec.cy.js
#         working-directory: ./quasar-project
#     - name: Upload Cypress component artifacts
#       if: always()
#       uses: actions/upload-artifact@v4
#       with:
#         name: cypress-component-artifacts
#         path: quasar-project/cypress/downloads
#         retention-days: 77
